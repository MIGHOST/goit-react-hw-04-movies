{"version":3,"sources":["component/Movie/Movie.module.css","component/AdditionalInfo/AdditionalInfo.module.css","helpers/getYear.js","component/Movie/Movie.js","component/AdditionalInfo/AdditionalInfo.js","pages/MovieDetailsPage.js","service/service-api.js","helpers/getID.js"],"names":["module","exports","getData","str","substr","Movies","title","poster_path","vote_average","overview","genres","release_date","onGoBack","date","className","styles","title_page","type","onClick","button","button_label","container","img_container","width","height","src","alt","vote","genres_list","length","map","id","name","key","AdditionalInfo","match","useRouteMatch","location","useLocation","list","to","pathname","url","state","from","activeClassName","activeStyle","AsyncCast","lazy","AsyncReviews","MovieDetailsPage","history","useHistory","useState","film","setFilm","useEffect","getIdFromProps","fetchFindMoviesID","then","Movie","push","routes","HOME","fallback","color","timeout","path","component","axios","defaults","baseURL","KEY","fetchTrendMovies","trend","get","response","data","results","fetchFindMovies","query","fetchMovieCast","cast","fetchMovieReviews","params","movieId"],"mappings":"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","file":"static/js/movies-details-page.3a639629.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Movie_container__3lbQi\",\"title_page\":\"Movie_title_page__CgdEE\",\"button\":\"Movie_button__32FFt\",\"button_label\":\"Movie_button_label__2Xo5h\",\"img_container\":\"Movie_img_container__28xS9\",\"title\":\"Movie_title__1vUfr\",\"vote\":\"Movie_vote__3FOli\",\"overview\":\"Movie_overview__1tOsa\",\"genres_list\":\"Movie_genres_list__3dFjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AdditionalInfo_title__38Dyb\",\"list\":\"AdditionalInfo_list__1tVJe\",\"activeStyle\":\"AdditionalInfo_activeStyle__2zmNM\"};","const getData = str => str.substr(0, 4)\r\n\r\nexport default getData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Movie.module.css';\r\nimport getData from '../../helpers/getYear';\r\n\r\nconst Movies = ({\r\n  title,\r\n  poster_path,\r\n  vote_average,\r\n  overview,\r\n  genres,\r\n  release_date,\r\n  onGoBack,\r\n}) => {\r\n  const date = getData(release_date);\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title_page}>Movies details</h1>\r\n      <div>\r\n        <button type=\"button\" onClick={onGoBack} className={styles.button}>\r\n          <span className={styles.button_label}></span>\r\n          Go back\r\n        </button>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <div className={styles.img_container}>\r\n          <img\r\n            width=\"200\"\r\n            height=\"300\"\r\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n            alt={title}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2 className={styles.title}>\r\n            {title} <span>({date})</span>\r\n          </h2>\r\n          <p>\r\n            <span className={styles.vote}> </span>\r\n            <b>User Score: {vote_average}</b>\r\n          </p>\r\n          <h3>Overview</h3>\r\n          <p className={styles.overview}> {overview}</p>\r\n          <h3>Genres</h3>\r\n          <ul className={styles.genres_list}>\r\n            {genres.length > 0 &&\r\n              genres.map(({ id, name }) => (\r\n                <li key={id}>\r\n                  <span>{name}</span>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovies.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string,\r\n  vote_average: PropTypes.number,\r\n  overview: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onGoBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport { NavLink, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport styles from './AdditionalInfo.module.css';\r\n\r\nconst AdditionalInfo = () => {\r\n  const match = useRouteMatch();\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      <h3 className={styles.title}>Additional information</h3>\r\n      <ul className={styles.list}>\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: `${match.url}/cast`,\r\n              state: {\r\n                from: location.state.from,\r\n              },\r\n            }}\r\n            activeClassName={styles.activeStyle}\r\n          >\r\n            Cast\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: `${match.url}/reviews`,\r\n              state: {\r\n                from: location.state.from,\r\n              },\r\n            }}\r\n            activeClassName={styles.activeStyle}\r\n          >\r\n            Reviews\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdditionalInfo;\r\n","import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { fetchFindMoviesID } from '../service/service-api';\r\nimport getIdFromProps from '../helpers/getID';\r\nimport Movies from '../component/Movie/Movie';\r\nimport routes from '../utils/routes';\r\nimport AdditionalInfo from '../component/AdditionalInfo/AdditionalInfo';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst AsyncCast = lazy(() =>\r\n  import('../component/Cast/Cast' /* webpackChunkName: \"cast-page\"*/),\r\n);\r\nconst AsyncReviews = lazy(() =>\r\n  import('../component/Reviews/Reviews' /* webpackChunkName: \"reviews-page\"*/),\r\n);\r\n\r\nconst MovieDetailsPage = () => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [film, setFilm] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const id = getIdFromProps(match);\r\n    fetchFindMoviesID(id).then(film => setFilm(film));\r\n  }, [match]);\r\n\r\n  const handleGoBack = () => {\r\n    if (location.state) {\r\n      history.push(location.state.from);\r\n      return;\r\n    }\r\n    history.push(routes.HOME);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {film && <Movies {...film} onGoBack={handleGoBack} />}\r\n\r\n      <AdditionalInfo />\r\n      <Suspense fallback={\r\n         <Loader\r\n         type=\"Puff\"\r\n         color=\"#000000\"\r\n         height={100}\r\n         width={100}\r\n         timeout={3000} />\r\n        }>\r\n        <Switch>\r\n          <Route path={`${match.path}/cast`} component={AsyncCast} />\r\n          <Route path={`${match.path}/reviews`} component={AsyncReviews} />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = 'api_key=b6962f1fab74d8b40a296f48247902a5';\r\n\r\nconst fetchTrendMovies = (trend = 'trending/all/day?') =>\r\n  axios.get(trend + KEY).then(response => response.data.results);\r\n\r\nconst fetchFindMovies = query =>\r\n  axios\r\n    .get(\r\n      `search/movie?${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\r\n    )\r\n    .then(response => response.data.results);\r\n\r\nconst fetchFindMoviesID = id =>\r\n  axios\r\n    .get(`movie/${id}?${KEY}&language=en-US`)\r\n    .then(response => response.data);\r\n\r\nconst fetchMovieCast = id =>\r\n  axios.get(`movie/${id}/credits?${KEY}`).then(response => response.data.cast);\r\n\r\nconst fetchMovieReviews = id =>\r\n  axios.get(`movie/${id}/reviews?${KEY}`).then(response => response.data.results);\r\n\r\nexport {\r\n  fetchTrendMovies,\r\n  fetchFindMovies,\r\n  fetchFindMoviesID,\r\n  fetchMovieCast,\r\n  fetchMovieReviews,\r\n};\r\n","const getIdFromProps = match => match.params.movieId;\r\nexport default getIdFromProps;"],"sourceRoot":""}